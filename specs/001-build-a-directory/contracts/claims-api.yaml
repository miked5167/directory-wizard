openapi: 3.0.3
info:
  title: Listing Claims API
  version: 1.0.0
  description: API for end users to claim and manage directory listings

paths:
  /api/auth/register:
    post:
      summary: Register new user account
      description: Creates a new user account and sends email verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - first_name
                - last_name
              properties:
                email:
                  type: string
                  format: email
                  example: "john@example.com"
                password:
                  type: string
                  minLength: 8
                  example: "SecurePass123!"
                first_name:
                  type: string
                  minLength: 1
                  maxLength: 50
                  example: "John"
                last_name:
                  type: string
                  minLength: 1
                  maxLength: 50
                  example: "Doe"
      responses:
        '201':
          description: User account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    format: uuid
                  email:
                    type: string
                    format: email
                  verification_sent:
                    type: boolean
                  message:
                    type: string
                    example: "Account created. Please check your email to verify your account."
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/verify-email:
    post:
      summary: Verify user email address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  example: "abc123def456"
      responses:
        '200':
          description: Email verified successfully
        '400':
          description: Invalid or expired token

  /api/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials

  /api/listings/{listingId}/claim:
    post:
      summary: Submit claim for a listing
      description: Initiates the listing claim process for authenticated user
      security:
        - bearerAuth: []
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - claim_method
              properties:
                claim_method:
                  type: string
                  enum: [EMAIL_VERIFICATION, PHONE_VERIFICATION, DOCUMENT_UPLOAD]
                verification_data:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      description: Required for EMAIL_VERIFICATION
                    phone:
                      type: string
                      description: Required for PHONE_VERIFICATION
                    business_name:
                      type: string
                      description: Business name for verification
      responses:
        '201':
          description: Claim submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  claim_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [PENDING]
                  expires_at:
                    type: string
                    format: date-time
                  next_steps:
                    type: array
                    items:
                      type: string
        '409':
          description: Listing already has an active claim
        '422':
          description: Invalid verification data for selected method

  /api/claims/{claimId}/verify:
    post:
      summary: Submit verification evidence for claim
      security:
        - bearerAuth: []
      parameters:
        - name: claimId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                verification_type:
                  type: string
                  enum: [EMAIL_DOMAIN, PHONE_NUMBER, BUSINESS_DOCUMENT, UTILITY_BILL]
                evidence_file:
                  type: string
                  format: binary
                  description: Supporting document (PDF, JPG, PNG)
                evidence_data:
                  type: string
                  description: JSON string with additional verification data
      responses:
        '200':
          description: Verification evidence submitted
          content:
            application/json:
              schema:
                type: object
                properties:
                  verification_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [PENDING]
                  message:
                    type: string

  /api/claims/{claimId}:
    get:
      summary: Get claim status and details
      security:
        - bearerAuth: []
      parameters:
        - name: claimId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Claim details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingClaim'
        '404':
          description: Claim not found
        '403':
          description: Access denied - not your claim

  /api/users/me/claims:
    get:
      summary: Get current user's claims across all tenants
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, APPROVED, REJECTED, VERIFIED, EXPIRED]
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: User claims retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  claims:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListingClaimWithListing'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /api/listings/{listingId}/update:
    put:
      summary: Update claimed listing (owner only)
      security:
        - bearerAuth: []
      parameters:
        - name: listingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 5
                  maxLength: 200
                description:
                  type: string
                data:
                  type: object
                  description: Flexible schema based on category requirements
      responses:
        '200':
          description: Listing updated successfully
        '403':
          description: Access denied - user doesn't own this listing
        '422':
          description: Validation errors

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        email_verified:
          type: boolean
        created_at:
          type: string
          format: date-time

    ListingClaim:
      type: object
      properties:
        id:
          type: string
          format: uuid
        listing_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [PENDING, APPROVED, REJECTED, VERIFIED, EXPIRED]
        claim_method:
          type: string
          enum: [EMAIL_VERIFICATION, PHONE_VERIFICATION, DOCUMENT_UPLOAD]
        submitted_at:
          type: string
          format: date-time
        reviewed_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
        reviewer_notes:
          type: string
          nullable: true

    ListingClaimWithListing:
      allOf:
        - $ref: '#/components/schemas/ListingClaim'
        - type: object
          properties:
            listing:
              type: object
              properties:
                title:
                  type: string
                slug:
                  type: string
                tenant_domain:
                  type: string

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        pages:
          type: integer

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true